DESIGN DOC

Overview

Build a small web app that lists hotels from api call and filters based on stars or price.
Suggest back end flight data structure for.


Task 

1. Hotel list

We need for our next trip with the whole ‚ò†Ô∏è-crew a hotel and what we get from our backend-üêµ 
was only [this](http://fake-hotel-api.herokuapp.com/).

Your task is now to present us the hotels that we can choose the right one for our next trip. 
To make it easier for us to find the right hotel, we want to have a filter for hotel ‚≠ê (stars) 
and hotel üí∞ (price).

2. The Flight

To get to our hotel, we also need a flight. But here our backend-üêµ 
has no idea how he can start with the development.

Your second task is to explain our backend-üêµ what you need from him as a data structure for an API 
endpoint.

Here you are entirely free how the data structure should look like and which format it should have. 
Think about what you need to show us also a flight list where we can search flight to our hotel.

Please describe with your own words in a text what you need and give us a short example with dummy data 
how your data structure will look like. See this text as a briefing for a KickOff meeting that all
 departments can sit together and talk about the next steps.


Context
    HTML single page
    Vanilla js
    Read API call JSON
    Display & Sort data 
    styled data


Proposed Solution

    HTML 
        header
        body
            selection sort
            results

    Display data    
        -default 3 starts Sort

    filter 
        -sort price

Flight API Solution
For the flight finder backend API I have written a small function to send a get request call 
similar to the provided fake hotels api. In a small modal a user enters flight details. The desitantion
city is bound to the selected hotel. This function returns an object with four keys:
 flights = {
     departure: "city",
     destination: "cityStr",
    departureDate: "xx.xx.xx",
    returnDate: "xx.xx.xx"
}

The url for a heroku backend would respond to :
"http://fake-hotel-api.herokuapp.com/api/flights/departure/desitnation/departureDate/returnDate

The backend would scrap for results returning many results. These results could be filtered and 
handled  in the fronted by price, length, layover sorting.
        

Challenge
    sort data
    Map?
        ascending - descending
        map() - make new array
        filter() - callback function conditional returns new array
        sort() - comparison 
         find() - True / false
 


Steps to Run

1.open index.html page




